global using Object = System.Infra.Object;
global using Range = System.Infra.Range;
global using RangeInfra = System.Infra.RangeInfra;
global using Compare = System.Infra.Compare;
global using StringCompare = System.Infra.StringCompare;
global using ObjectInfra = System.Infra.ObjectInfra;
global using List = System.List.List;
global using Map = System.List.Map;
global using Stack = System.List.Stack;
global using Pair = System.List.Pair;
global using ListIter = System.List.ListIter;
global using MapIter = System.List.MapIter;
global using ArrayIter = System.List.ArrayIter;
global using InfraCompile = Class.Infra.Compile;
global using Source = Class.Infra.Source;
global using SourceArray = Class.Infra.SourceArray;
global using Error = Class.Infra.Error;
global using ErrorKind = Class.Infra.ErrorKind;
global using InfraErrorKindList = Class.Infra.ErrorKindList;
global using ErrorList = Class.Infra.ErrorList;
global using ModuleRefer = Class.Infra.ModuleRefer;
global using ModuleIntent = Class.Infra.ModuleIntent;
global using ModuleVer = Class.Infra.ModuleVer;
global using ModuleName = Class.Infra.ModuleName;
global using ModuleReferCompare = Class.Infra.ModuleReferCompare;
global using VerInfra = Class.Infra.VerInfra;
global using Constant = Class.Infra.Constant;
global using NodeClass = Class.Node.Class;
global using NodeClassName = Class.Node.ClassName;
global using NodeField = Class.Node.Field;
global using FieldName = Class.Node.FieldName;
global using NodeMethod = Class.Node.Method;
global using MethodName = Class.Node.MethodName;
global using NodeAccess = Class.Node.Access;
global using ParamList = Class.Node.ParamList;
global using MemberList = Class.Node.MemberList;
global using Member = Class.Node.Member;
global using Param = Class.Node.Param;
global using PublicAccess = Class.Node.PublicAccess;
global using LocalAccess = Class.Node.LocalAccess;
global using DeriveAccess = Class.Node.DeriveAccess;
global using PrivateAccess = Class.Node.PrivateAccess;
global using StateList = Class.Node.StateList;
global using State = Class.Node.State;
global using IfState = Class.Node.IfState;
global using WhileState = Class.Node.WhileState;
global using ReturnState = Class.Node.ReturnState;
global using DeclareState = Class.Node.DeclareState;
global using AssignState = Class.Node.AssignState;
global using ExpressState = Class.Node.ExpressState;
global using Express = Class.Node.Express;
global using ThisExpress = Class.Node.ThisExpress;
global using BaseExpress = Class.Node.BaseExpress;
global using NewExpress = Class.Node.NewExpress;
global using GlobalExpress = Class.Node.GlobalExpress;
global using BracketExpress = Class.Node.BracketExpress;
global using AndExpress = Class.Node.AndExpress;
global using OrnExpress = Class.Node.OrnExpress;
global using NotExpress = Class.Node.NotExpress;
global using AddExpress = Class.Node.AddExpress;
global using SubExpress = Class.Node.SubExpress;
global using MulExpress = Class.Node.MulExpress;
global using DivExpress = Class.Node.DivExpress;
global using EqualExpress = Class.Node.EqualExpress;
global using LessExpress = Class.Node.LessExpress;
global using JoinExpress = Class.Node.JoinExpress;
global using CallExpress = Class.Node.CallExpress;
global using GetExpress = Class.Node.GetExpress;
global using CastExpress = Class.Node.CastExpress;
global using NullExpress = Class.Node.NullExpress;
global using VarExpress = Class.Node.VarExpress;
global using ConstantExpress = Class.Node.ConstantExpress;
global using ArgueList = Class.Node.ArgueList;
global using Argue = Class.Node.Argue;
global using Target = Class.Node.Target;
global using VarTarget = Class.Node.VarTarget;
global using SetTarget = Class.Node.SetTarget;
global using NodeVar = Class.Node.Var;
global using VarName = Class.Node.VarName;
global using NodeConstant = Class.Node.Constant;
global using BoolConstant = Class.Node.BoolConstant;
global using IntConstant = Class.Node.IntConstant;
global using StringConstant = Class.Node.StringConstant;
global using NodeNode = Class.Node.Node;
global using NodeResult = Class.Node.Result;
global using Tree = Class.Node.Tree;